{"version":3,"sources":["pages/Home.js","utils/auth.js","utils/mutations.js","pages/ProjectForm.js","components/Jumbotron/index.js","pages/NoMatch.js","pages/Login.js","pages/Signup.js","assets/pcpLogo.jpg","components/Nav/index.js","utils/queries.js","components/ProjectList/index.js","pages/CurrentProjects.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","id","icon","faHighlighter","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","LOGIN","gql","ADD_USER","ADD_PROJECT","CreateProject","props","useState","projectDate","name","description","image","budget","timeSpent","formState","setFormState","useMutation","errorPolicy","addProject","error","useEffect","console","log","handleFormSubmit","event","a","preventDefault","variables","input","mutationResponse","data","Auth","login","handleChange","target","value","type","parseInt","onSubmit","placeholder","onChange","faCalendarAlt","faDollarSign","faCar","disabled","faImages","faUpload","faStopwatch","onClick","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","faSmog","faCarSide","faCarCrash","Login","email","password","htmlFor","to","faClipboardList","Signup","firstName","lastName","addUser","faHome","Nav","document","addEventListener","$navbarBurgers","Array","prototype","slice","call","querySelectorAll","length","forEach","el","dataset","$target","getElementById","classList","toggle","role","href","src","Logo","loggedIn","faTruckPickup","faTruckMonster","faClipboardCheck","logout","QUERY_PROJECTS","ProjectList","projects","map","project","alt","vehicle","_id","CurrentProjects","useQuery","loading","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","ProjectForm","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","URL","process","origin","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.95149b8e.chunk.js","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHighlighter } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Home = () => {\n  return (\n    <div className=\"columns is-mobile\">\n      <div className=\"column is-10 is-offset-1\">\n        <div className=\"hero is-halfheight\" id=\"board-container\">\n          <br></br>\n          <h1 id=\"welcome-font\">\n            Welcome to the Project car Portal!<br></br>\n            Sign up or Log in to begin keeping <br></br>\n            track of your projects! _<FontAwesomeIcon icon={faHighlighter} />\n          </h1>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import decode from \"jwt-decode\";\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem(\"id_token\");\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem(\"id_token\", idToken);\n\n    window.location.assign(\"/\");\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem(\"id_token\");\n    // this will reload the page and reset the state of the application\n    window.location.assign(\"/\");\n  }\n}\n\nexport default new AuthService();\n","import { gql } from \"@apollo/client\";\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_PROJECT = gql`\n  mutation ($input: ProjectInput!) {\n    addProject(input: $input) {\n      projectDate\n      name\n      description\n      image\n      budget\n      timeSpent\n    }\n  }\n`;\n\nexport const ADD_VEHICLE = gql`\n  mutation ($input: VehicleInput) {\n    addVehicle(input: $input) {\n      type\n      year\n      make\n      model\n      trimLvl\n      engineDisp\n    }\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport Auth from \"../utils/auth\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_PROJECT, ADD_VEHICLE } from \"../utils/mutations\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faStopwatch,\n  faUpload,\n  faImages,\n  faDollarSign,\n  faCalendarAlt,\n  faCar,\n  faHighlighter,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction CreateProject(props) {\n  const [formState, setFormState] = useState({\n    projectDate: \"\",\n    name: \"\",\n    description: \"\",\n    image: \"\",\n    budget: \"\",\n    timeSpent: \"\",\n  });\n\n  const [addProject, { error }] = useMutation(ADD_PROJECT, {\n    errorPolicy: \"all\",\n  });\n\n  useEffect(() => {\n    console.log(error);\n  }, [error]);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const mutationResponse = await addProject({\n        variables: {\n          input: formState,\n        },\n      });\n      console.log(mutationResponse);\n      const token = mutationResponse.data.addProject.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = (event) => {\n    let { name, value, type } = event.target;\n    if (type === \"number\") {\n      value = parseInt(value);\n    }\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n\n    // const fileInput = document.querySelector('file-input');\n    // fileInput.onchange = () => {\n    //   if (fileInput.files.length > 0) {\n    //     const fileName = document.querySelector('file-name');\n    //     fileName.textContent = fileInput.files[0].name;\n    //   }\n  };\n\n  return (\n    <>\n      <div className=\"columns is-mobile\">\n        <div className=\"column is-10 is-offset-1\" id=\"board-container\">\n          <form className=\"hero is-halfheight\" onSubmit={handleFormSubmit}>\n            <h1 className=\"column is-3 is-offset-5\">\n              Add a project here _<FontAwesomeIcon icon={faHighlighter} />\n            </h1>\n            <div className=\"columns is-multiline is-mobile\">\n              <div className=\"column is-4 is-offset-2\">\n                <div className=\"field\">\n                  <p className=\"control has-icons-left\">\n                    <input\n                      className=\"input is-normal\"\n                      name=\"projectDate\"\n                      type=\"date\"\n                      placeholder=\"Project Date\"\n                      onChange={handleChange}\n                    ></input>\n                    <span className=\"icon is-small is-left\">\n                      <FontAwesomeIcon icon={faCalendarAlt} />\n                    </span>\n                  </p>\n                </div>\n              </div>\n              <div className=\"column is-4 \">\n                <div className=\"field\">\n                  <p className=\"control has-icons-left\">\n                    <input\n                      className=\"input is-normal\"\n                      name=\"budget\"\n                      type=\"number\"\n                      placeholder=\"Budget\"\n                      onChange={handleChange}\n                    ></input>\n                    <span className=\"icon is-small is-left\">\n                      <FontAwesomeIcon icon={faDollarSign} />\n                    </span>\n                  </p>\n                </div>\n              </div>\n              <div className=\"column is-6 is-offset-2\">\n                <div className=\"field\">\n                  <p className=\"control has-icons-left\">\n                    <input\n                      className=\"input is-normal\"\n                      name=\"name\"\n                      type=\"text\"\n                      placeholder=\"Name\"\n                      onChange={handleChange}\n                    ></input>\n                    <span className=\"icon is-small is-left\">\n                      <FontAwesomeIcon icon={faCar} />\n                    </span>\n                  </p>\n                </div>\n              </div>\n              <div className=\"column is-8 is-offset-2\">\n                <div className=\"field\">\n                  <p className=\"control has-icons-left\">\n                    <textarea\n                      name=\"description\"\n                      className=\"textarea\"\n                      placeholder=\"Description\"\n                      type=\"text\"\n                      onChange={handleChange}\n                    ></textarea>\n                  </p>\n                </div>\n              </div>\n              <div className=\"column is-3 is-offset-2\">\n                <div className=\"field\">\n                  <div className=\"file has-name\">\n                    <label className=\"file-label\">\n                      <input\n                        className=\"file-input\"\n                        type=\"file\"\n                        name=\"image\"\n                        onChange={handleChange}\n                        disabled\n                      ></input>\n                      <span className=\"file-cta\">\n                        <span className=\"file-icon\">\n                          <FontAwesomeIcon icon={faImages} />\n                        </span>\n                        <span className=\"file-label\">\n                          <FontAwesomeIcon icon={faUpload} />\n                        </span>\n                      </span>\n                      <span className=\"file-name\" placeholder=\"File\">\n                        Coming Soon\n                      </span>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              <div className=\"column is-5\">\n                <div className=\"field\">\n                  <p className=\"control has-icons-left\">\n                    <input\n                      className=\"input is-normal\"\n                      name=\"timeSpent\"\n                      type=\"number\"\n                      placeholder=\"Time spent in hours\"\n                      onChange={handleChange}\n                    ></input>\n                    <span className=\"icon is-small is-left\">\n                      <FontAwesomeIcon icon={faStopwatch} />\n                    </span>\n                  </p>\n                </div>\n              </div>\n              <div className=\"column is-full\" id=\"submit-btn\">\n                <div className=\"field is-grouped is-grouped-centered\">\n                  <div className=\"control\">\n                    <button\n                      className=\"button is-dark\"\n                      type=\"submit\"\n                      onClick={handleFormSubmit}\n                    >\n                      Submit\n                    </button>\n                  </div>\n                  <div className=\"control\">\n                    <button className=\"button is-light\">Cancel</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default CreateProject;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{\n        height: 560,\n        clear: \"both\",\n        paddingTop: 120,\n        textAlign: \"center\",\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCarCrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCarSide } from \"@fortawesome/free-solid-svg-icons\";\nimport { faSmog } from \"@fortawesome/free-solid-svg-icons\";\nimport { faHighlighter } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>\n          <div className=\"hero is-halfheight\" id=\"home-container\">\n            <h1>404 Page Not Found</h1>\n            <div>\n              _____\n              <FontAwesomeIcon icon={faSmog} />\n              <FontAwesomeIcon icon={faCarSide} />\n              <FontAwesomeIcon icon={faCarCrash} />_\n              <FontAwesomeIcon icon={faHighlighter} />\n            </div>\n          </div>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\nimport { LOGIN } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faClipboardList,\n  faHighlighter,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"columns is-mobile\">\n        <div className=\"column is-10 is-offset-1\" id=\"board-container\">\n          <form className=\"hero is-halfheight\" onSubmit={handleFormSubmit}>\n            <h2 className=\"column is-4 is-offset-5\">\n              Login Here _<FontAwesomeIcon icon={faHighlighter} />\n            </h2>\n            <div className=\"column is-4 is-offset-4\">\n              <div className=\"field\">\n                <label htmlFor=\"email\">Email address: </label>\n                <input\n                  className=\"input is-small\"\n                  placeholder=\"youremail@test.com\"\n                  name=\"email\"\n                  type=\"email\"\n                  id=\"email\"\n                  onChange={handleChange}\n                />\n              </div>\n            </div>\n            <div className=\"column is-4 is-offset-4\">\n              <div className=\"field\">\n                <label htmlFor=\"pwd\">Password: </label>\n                <input\n                  className=\"input is-small\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  id=\"pwd\"\n                  onChange={handleChange}\n                />\n              </div>\n            </div>\n\n            {error ? (\n              <div className=\"column is-6 is-offset-3\">\n                <p className=\"error-text\">\n                  The provided credentials are incorrect\n                </p>\n              </div>\n            ) : null}\n            <div className=\"column is-full\" id=\"submit-btn\">\n              <div className=\"field is-grouped is-grouped-centered\">\n                <div className=\"buttons\">\n                  <button className=\"button is-dark\" type=\"submit\">\n                    Submit\n                  </button>\n                  <Link className=\"button is-dark\" to=\"/signup\">\n                    <FontAwesomeIcon icon={faClipboardList} /> Go to Signup\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome, faHighlighter } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [addUser, { error }] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const mutationResponse = await addUser({\n        variables: {\n          firstName: formState.firstName,\n          lastName: formState.lastName,\n          email: formState.email,\n          password: formState.password,\n        },\n      });\n      const token = mutationResponse.data.addUser.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"columns is-mobile\">\n      <div className=\"column is-10 is-offset-1\" id=\"board-container\">\n        <form className=\"hero is-halfheight\" onSubmit={handleFormSubmit}>\n          <h1 className=\"column is-4 is-offset-5\">\n            Add a project here _<FontAwesomeIcon icon={faHighlighter} />\n          </h1>\n          <div className=\"column is-4 is-offset-4\">\n            <div className=\"field\">\n              <label htmlFor=\"firstName\">First Name:</label>\n              <input\n                className=\"input is-small\"\n                placeholder=\"First\"\n                name=\"firstName\"\n                type=\"firstName\"\n                id=\"firstName\"\n                onChange={handleChange}\n              />\n            </div>\n          </div>\n          <div className=\"column is-4 is-offset-4\">\n            <div className=\"field\">\n              <label htmlFor=\"lastName\">Last Name:</label>\n              <input\n                className=\"input is-small\"\n                placeholder=\"Last\"\n                name=\"lastName\"\n                type=\"lastName\"\n                id=\"lastName\"\n                onChange={handleChange}\n              />\n            </div>\n          </div>\n          <div className=\"column is-4 is-offset-4\">\n            <div className=\"field\">\n              <label htmlFor=\"email\">Email:</label>\n              <input\n                className=\"input is-small\"\n                placeholder=\"youremail@test.com\"\n                name=\"email\"\n                type=\"email\"\n                id=\"email\"\n                onChange={handleChange}\n              />\n            </div>\n          </div>\n          <div className=\"column is-4 is-offset-4\">\n            <div className=\"field\">\n              <label htmlFor=\"pwd\">Password:</label>\n              <input\n                className=\"input is-small\"\n                placeholder=\"******\"\n                name=\"password\"\n                type=\"password\"\n                id=\"pwd\"\n                onChange={handleChange}\n              />\n            </div>\n          </div>\n          {error ? (\n            <div className=\"column is-6 is-offset-3\">\n              <p className=\"error-text\">\n                Please Fill out the form or go back to the homepage!\n              </p>\n            </div>\n          ) : null}\n          <div className=\"column is-full\" id=\"submit-btn\">\n            <div className=\"field is-grouped is-grouped-centered\">\n              <div className=\"buttons\">\n                <button className=\"button is-dark\" type=\"submit\">\n                  Submit\n                </button>\n                <Link className=\"button is-light\" to=\"/\">\n                  <FontAwesomeIcon icon={faHome} />\n                  Home\n                </Link>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Signup;\n","export default __webpack_public_path__ + \"static/media/pcpLogo.2a45fbd0.jpg\";","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHome,\n  faTruckMonster,\n  faTruckPickup,\n  faClipboardCheck,\n  faClipboardList,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Logo from \"../../assets/pcpLogo.jpg\";\n\nfunction Nav() {\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    // Get all \"navbar-burger\" elements\n    const $navbarBurgers = Array.prototype.slice.call(\n      document.querySelectorAll(\".navbar-burger\"),\n      0\n    );\n\n    // Check if there are any navbar burgers\n    if ($navbarBurgers.length > 0) {\n      // Add a click event on each of them\n      $navbarBurgers.forEach((el) => {\n        el.addEventListener(\"click\", () => {\n          // Get the target from the \"data-target\" attribute\n          const target = el.dataset.target;\n          const $target = document.getElementById(target);\n\n          // Toggle the \"is-active\" class on both the \"navbar-burger\" and the \"navbar-menu\"\n          el.classList.toggle(\"is-active\");\n          $target.classList.toggle(\"is-active\");\n        });\n      });\n    }\n  });\n\n  function showCreateForm() {\n    if (Auth.loggedIn()) {\n      return (\n        <Link className=\"navbar-item\" to=\"/projectForm\">\n          {\" \"}\n          Create Project_\n          <FontAwesomeIcon icon={faTruckPickup} />\n        </Link>\n      );\n    } else {\n      return (\n        <Link className=\"navbar-item \" to=\"/signup\" id=\"signup-btn\">\n          <FontAwesomeIcon icon={faClipboardList} id=\"login-icon\" />\n          Sign up or...{\" \"}\n        </Link>\n      );\n    }\n  }\n\n  function showCurrentProjects() {\n    if (Auth.loggedIn()) {\n      return (\n        <Link className=\"navbar-item\" to=\"/currentProjects\">\n          Current Projects_\n          <FontAwesomeIcon icon={faTruckMonster} />\n        </Link>\n      );\n    } else {\n      return (\n        <Link className=\"navbar-item\" to=\"/login\">\n          <FontAwesomeIcon icon={faClipboardCheck} />\n          ...Log in FIRST!\n        </Link>\n      );\n    }\n  }\n\n  function showLogOut() {\n    if (Auth.loggedIn()) {\n      return (\n        <Link className=\"button is-light\" to=\"/\" onClick={() => Auth.logout()}>\n          <FontAwesomeIcon icon={faClipboardCheck} />\n          Logout\n        </Link>\n      );\n    } else {\n      return (\n        <Link className=\"button is-light\" to=\"/login\">\n          <FontAwesomeIcon icon={faClipboardCheck} />\n          Log in\n        </Link>\n      );\n    }\n  }\n\n  return (\n    <div className=\"columns\">\n      <div className=\"column is-full\">\n        <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n          <div className=\"navbar-brand\">\n            <a\n              className=\"navbar-item\"\n              href=\"https://project-car-portal.herokuapp.com/\"\n            >\n              <img src={Logo}></img>\n            </a>\n            <a\n              role=\"button\"\n              className=\"navbar-burger\"\n              aria-label=\"menu\"\n              aria-expanded=\"false\"\n              data-target=\"navbarBasicExample\"\n            >\n              <span aria-hidden=\"true\"></span>\n              <span aria-hidden=\"true\"></span>\n              <span aria-hidden=\"true\"></span>\n            </a>\n          </div>\n          <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n            <div className=\"navbar-start\">\n              <Link className=\"navbar-item\" to=\"/\">\n                <FontAwesomeIcon icon={faHome} />- Home\n              </Link>\n              <div className=\"navbar-item has-dropdown is-hoverable\">\n                <a className=\"navbar-link\">More</a>\n                <div className=\"navbar-dropdown\">\n                  {showCreateForm()}\n                  {showCurrentProjects()}\n                  {/* <a className=\"navbar-item\">Contact</a>\n                  <hr className=\"navbar-divider\"></hr>\n                  <a className=\"navbar-item\">Report an issue</a> */}\n                </div>\n              </div>\n            </div>\n            <div className=\"navbar-end\">\n              <div className=\"navbar-item\">\n                <div className=\"buttons\">\n                  <Link\n                    className=\"button is-dark \"\n                    to=\"/signup\"\n                    id=\"signup-btn\"\n                  >\n                    <FontAwesomeIcon icon={faClipboardList} id=\"login-icon\" />\n                    Sign up{\" \"}\n                  </Link>\n                  {showLogOut()}\n                </div>\n              </div>\n            </div>\n          </div>\n        </nav>\n      </div>\n    </div>\n  );\n}\n\nexport default Nav;\n","import { gql } from \"@apollo/client\";\n\nexport const QUERY_PROJECTS = gql`\n  query getProjects {\n    projects {\n      _id\n      projectDate\n      name\n      description\n      image\n      budget\n      timeSpent\n      vehicle {\n        _id\n        type\n        year\n        make\n        model\n        trimLvl\n        engineDisp\n      }\n      transactions {\n        _id\n        name\n        value\n        date\n      }\n      todos {\n        _id\n        content\n        createdOn\n        isComplete\n      }\n      notes {\n        _id\n        title\n        content\n        createdOn\n      }\n    }\n  }\n`;\n\nexport const QUERY_PROJECT_BY_ID = gql`\n  query projectByID($id: ID!) {\n    getProject(_id: $id) {\n      projectDate\n      name\n      description\n      image\n      budget\n      timeSpent\n      vehicle {\n        type\n        year\n        make\n        model\n        trimLvl\n        engineDisp\n      }\n      transactions {\n        name\n        value\n        date\n      }\n      todos {\n        content\n        createdOn\n        isComplete\n      }\n      notes {\n        title\n        content\n        createdOn\n      }\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      email\n      projects {\n        _id\n        projectDate\n        name\n        description\n        image\n        budget\n        timeSpent\n        vehicle {\n          _id\n          type\n          year\n          make\n          model\n          trimLvl\n          engineDisp\n        }\n        transactions {\n          _id\n          name\n          value\n          date\n        }\n        todos {\n          _id\n          content\n          createdOn\n          isComplete\n        }\n        notes {\n          _id\n          title\n          content\n          createdOn\n        }\n      }\n    }\n  }\n`;\n\nexport const QUERY_VEHICLES = gql`\n  query getVehicles {\n    getAllVehicles {\n      _id\n      type\n      year\n      make\n      model\n      trimLvl\n      engineDisp\n      projectID\n    }\n  }\n`;\n","// import { idbPromise } from \"../../utils/helpers\";\nimport Auth from \"../../utils/auth\";\n\nconst ProjectList = ({ projects }) => {\n  console.log(projects);\n  if (!projects.length) {\n    return <h3>No Projects Yet</h3>;\n  } else if (!Auth.loggedIn()) {\n    return <h3>Please Log In</h3>;\n  }\n\n  return (\n    <div>\n      {projects &&\n        projects.map((project) => (\n          <section\n            className=\"hero columns is-multiline is-mobile section is-medium\"\n            key={project._id}\n            id=\"project-card\"\n          >\n            <div className=\"card\">\n              <header className=\"card-header\">\n                <p className=\"card-header-title is-centered\">\n                  <span id=\"name-text\">{project.name}</span>\n                </p>\n              </header>\n\n              <div className=\"column is-4 is-offset-4\">\n                <div className=\"card-image \">\n                  {/* <figure className=\"image is-4by3\">\n                  <img src={project.image} alt=\"Car-pic\"></img>\n                </figure> */}\n                  <figure className=\"image\">\n                    <img\n                      src=\"https://bulma.io/images/placeholders/96x96.png\"\n                      alt=\"Placeholder image\"\n                    ></img>\n                  </figure>\n                </div>\n              </div>\n              <div className=\"column is-full\">\n                <div className=\"card-content\">\n                  <div className=\"media\">\n                    <div className=\"media-content\">\n                      <p className=\"title has-text-left\" id=\"card-title\">\n                        Started on:{\" \"}\n                        <span id=\"date-text\">{project.projectDate}</span>\n                      </p>\n                      <p className=\"subtitle has-text-left\" id=\"card-budget\">\n                        Total Budget:{\" \"}\n                        <span id=\"date-text\">{project.budget}</span>\n                      </p>\n                      <p className=\"subtitle has-text-left\" id=\"card-time\">\n                        Time Spent in hours:{\" \"}\n                        <span id=\"date-text\">{project.timeSpent}</span>\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"content has-text-left\" id=\"card-description\">\n                    Description:{\" \"}\n                    <span id=\"date-text\">{project.description}</span>\n                  </div>\n                  <div className=\"content has-text-left\" id=\"card-vehicle\">\n                    Vehicle: <span id=\"date-text\">{project.vehicle}</span>\n                  </div>\n                </div>\n                <footer className=\"card-footer\">\n                  <a href=\"#\" className=\"card-footer-item\">\n                    Add Vehicle\n                  </a>\n                  <a href=\"#\" className=\"card-footer-item\">\n                    Edit Project\n                  </a>\n                  <a href=\"#\" className=\"card-footer-item\">\n                    Delete Project\n                  </a>\n                </footer>\n              </div>\n            </div>\n          </section>\n        ))}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React, { useState } from \"react\";\nimport Auth from \"../utils/auth\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_PROJECTS } from \"../utils/queries\";\nimport ProjectList from \"../components/ProjectList\";\n\nfunction CurrentProjects() {\n  const { loading, data } = useQuery(QUERY_PROJECTS);\n  console.log(data);\n  let projects = data?.projects || [];\n  console.log(projects);\n\n  return (\n    <>\n      <div className=\"columns is-mobile\">\n        <div className=\"column is-10 is-offset-1\">\n          <div className=\"hero is-halfheight\" id=\"board-container\">\n            {loading ? (\n              <div id=\"project-text\">Loading...</div>\n            ) : (\n              <div className=\"columns is-mobile\">\n                <div className=\"column is-8 is-offset-2\">\n                  <ProjectList projects={projects} />\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default CurrentProjects;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport Home from \"./pages/Home\";\nimport ProjectForm from \"./pages/ProjectForm\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Nav from \"./components/Nav\";\nimport CurrentProjects from \"./pages/CurrentProjects\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"main-contain\">\n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/projectForm\" component={ProjectForm} />\n            <Route exact path=\"/currentProjects\" component={CurrentProjects} />\n            <Route component={NoMatch} />\n          </Switch>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bulma/css/bulma.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}